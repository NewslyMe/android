// Generated by view binder compiler. Do not edit!
package com.guichaguri.trackplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Chronometer;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSeekBar;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.imageview.ShapeableImageView;
import com.guichaguri.trackplayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PlayerScreenBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout bottomLayout;

  @NonNull
  public final Chronometer chronometerCurrentPosition;

  @NonNull
  public final Chronometer chronometerFullDuration;

  @NonNull
  public final ImageView expandMoreImageView;

  @NonNull
  public final AppCompatSeekBar fullPanelSeekBar;

  @NonNull
  public final ImageView fullPanelSkipToNext;

  @NonNull
  public final ImageView fullPanelSkipToPrevious;

  @NonNull
  public final TextView fullPanelTextArtist;

  @NonNull
  public final TextView fullPanelTextTitle;

  @NonNull
  public final ShapeableImageView imageView;

  @NonNull
  public final RelativeLayout linearMain;

  @NonNull
  public final ImageView pauseFullPanel;

  @NonNull
  public final ImageView playFullPanel;

  @NonNull
  public final ImageView resetImageView;

  @NonNull
  public final ImageView skip10ToNextImage;

  @NonNull
  public final ImageView skip10ToPreviousImage;

  @NonNull
  public final ImageView speedImageView;

  @NonNull
  public final RelativeLayout toolBarFullPanel;

  @NonNull
  public final TextView txtEpisode;

  private PlayerScreenBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout bottomLayout,
      @NonNull Chronometer chronometerCurrentPosition, @NonNull Chronometer chronometerFullDuration,
      @NonNull ImageView expandMoreImageView, @NonNull AppCompatSeekBar fullPanelSeekBar,
      @NonNull ImageView fullPanelSkipToNext, @NonNull ImageView fullPanelSkipToPrevious,
      @NonNull TextView fullPanelTextArtist, @NonNull TextView fullPanelTextTitle,
      @NonNull ShapeableImageView imageView, @NonNull RelativeLayout linearMain,
      @NonNull ImageView pauseFullPanel, @NonNull ImageView playFullPanel,
      @NonNull ImageView resetImageView, @NonNull ImageView skip10ToNextImage,
      @NonNull ImageView skip10ToPreviousImage, @NonNull ImageView speedImageView,
      @NonNull RelativeLayout toolBarFullPanel, @NonNull TextView txtEpisode) {
    this.rootView = rootView;
    this.bottomLayout = bottomLayout;
    this.chronometerCurrentPosition = chronometerCurrentPosition;
    this.chronometerFullDuration = chronometerFullDuration;
    this.expandMoreImageView = expandMoreImageView;
    this.fullPanelSeekBar = fullPanelSeekBar;
    this.fullPanelSkipToNext = fullPanelSkipToNext;
    this.fullPanelSkipToPrevious = fullPanelSkipToPrevious;
    this.fullPanelTextArtist = fullPanelTextArtist;
    this.fullPanelTextTitle = fullPanelTextTitle;
    this.imageView = imageView;
    this.linearMain = linearMain;
    this.pauseFullPanel = pauseFullPanel;
    this.playFullPanel = playFullPanel;
    this.resetImageView = resetImageView;
    this.skip10ToNextImage = skip10ToNextImage;
    this.skip10ToPreviousImage = skip10ToPreviousImage;
    this.speedImageView = speedImageView;
    this.toolBarFullPanel = toolBarFullPanel;
    this.txtEpisode = txtEpisode;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlayerScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlayerScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.player_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlayerScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_layout;
      LinearLayout bottomLayout = rootView.findViewById(id);
      if (bottomLayout == null) {
        break missingId;
      }

      id = R.id.chronometer_current_position;
      Chronometer chronometerCurrentPosition = rootView.findViewById(id);
      if (chronometerCurrentPosition == null) {
        break missingId;
      }

      id = R.id.chronometer_full_duration;
      Chronometer chronometerFullDuration = rootView.findViewById(id);
      if (chronometerFullDuration == null) {
        break missingId;
      }

      id = R.id.expand_more_image_view;
      ImageView expandMoreImageView = rootView.findViewById(id);
      if (expandMoreImageView == null) {
        break missingId;
      }

      id = R.id.full_panel_seek_bar;
      AppCompatSeekBar fullPanelSeekBar = rootView.findViewById(id);
      if (fullPanelSeekBar == null) {
        break missingId;
      }

      id = R.id.full_panel_skip_to_next;
      ImageView fullPanelSkipToNext = rootView.findViewById(id);
      if (fullPanelSkipToNext == null) {
        break missingId;
      }

      id = R.id.full_panel_skip_to_previous;
      ImageView fullPanelSkipToPrevious = rootView.findViewById(id);
      if (fullPanelSkipToPrevious == null) {
        break missingId;
      }

      id = R.id.full_panel_text_artist;
      TextView fullPanelTextArtist = rootView.findViewById(id);
      if (fullPanelTextArtist == null) {
        break missingId;
      }

      id = R.id.full_panel_text_title;
      TextView fullPanelTextTitle = rootView.findViewById(id);
      if (fullPanelTextTitle == null) {
        break missingId;
      }

      id = R.id.image_view;
      ShapeableImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linear_main;
      RelativeLayout linearMain = rootView.findViewById(id);
      if (linearMain == null) {
        break missingId;
      }

      id = R.id.pause_full_panel;
      ImageView pauseFullPanel = rootView.findViewById(id);
      if (pauseFullPanel == null) {
        break missingId;
      }

      id = R.id.play_full_panel;
      ImageView playFullPanel = rootView.findViewById(id);
      if (playFullPanel == null) {
        break missingId;
      }

      id = R.id.reset_image_view;
      ImageView resetImageView = rootView.findViewById(id);
      if (resetImageView == null) {
        break missingId;
      }

      id = R.id.skip_10_to_next_image;
      ImageView skip10ToNextImage = rootView.findViewById(id);
      if (skip10ToNextImage == null) {
        break missingId;
      }

      id = R.id.skip_10_to_previous_image;
      ImageView skip10ToPreviousImage = rootView.findViewById(id);
      if (skip10ToPreviousImage == null) {
        break missingId;
      }

      id = R.id.speed_image_view;
      ImageView speedImageView = rootView.findViewById(id);
      if (speedImageView == null) {
        break missingId;
      }

      id = R.id.tool_bar_full_panel;
      RelativeLayout toolBarFullPanel = rootView.findViewById(id);
      if (toolBarFullPanel == null) {
        break missingId;
      }

      id = R.id.txtEpisode;
      TextView txtEpisode = rootView.findViewById(id);
      if (txtEpisode == null) {
        break missingId;
      }

      return new PlayerScreenBinding((LinearLayout) rootView, bottomLayout,
          chronometerCurrentPosition, chronometerFullDuration, expandMoreImageView,
          fullPanelSeekBar, fullPanelSkipToNext, fullPanelSkipToPrevious, fullPanelTextArtist,
          fullPanelTextTitle, imageView, linearMain, pauseFullPanel, playFullPanel, resetImageView,
          skip10ToNextImage, skip10ToPreviousImage, speedImageView, toolBarFullPanel, txtEpisode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
